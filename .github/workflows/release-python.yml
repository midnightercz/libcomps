---
name: Release to PyPI

on:
  release:
    types: [created]

jobs:
  build_sdist:
    name: Build source package
    runs-on: ubuntu-latest
    container: fedora:latest
    steps:
    - uses: actions/checkout@v2

    - name: Install / upgrade dependencies
      run: |
        sudo dnf -y install dnf-plugins-core python3-pip
        sudo dnf -y builddep libcomps.spec
        python3 -m pip install --upgrade pip scikit-build

    - name: Build and install Python source package
      run: |
        python3 setup.py sdist
        python3 -m pip install dist/*.tar.gz

    - name: Run tests
      run: |
        python3 -m pip install pytest
        pushd libcomps/src/python/tests/
        pytest --verbose --color=yes ./
        popd

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz


  build_bdist:
    name: Build binary wheels
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # setup Python for cibuildwheel
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    # for other architectures, see: https://cibuildwheel.readthedocs.io/en/stable/faq/#emulation
    - name: Build wheels for CPython
      uses: pypa/cibuildwheel@v2.11.3
      env:
        CIBW_ARCHS: auto64  # only 64-bit
        CIBW_SKIP: "pp* *-musllinux_*"  # no PyPy builds
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014  # centos 7
        CIBW_BEFORE_ALL_LINUX: yum -y install yum-utils epel-release && yes | yum-builddep libcomps.spec
        # CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28   # centos 8, but not supported widely yet
        # CIBW_BEFORE_ALL_LINUX: dnf -y install epel-release && yes | dnf -y builddep libcomps.spec
        CIBW_BEFORE_BUILD: python -m pip install scikit-build
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: |
          pushd {project}/libcomps/src/python/tests/
          pytest --verbose --color=yes ./
          popd

    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl


  upload_pypi:
    name: Publish packages to PyPI
    # only publish packages once everything is successful
    needs: [build_bdist, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{secrets.PYPI_API_TOKEN}}
          # To test: repository_url: https://test.pypi.org/legacy/
